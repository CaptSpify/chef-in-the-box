# Generated by Chef

##
## SSL settings
##

# SSL/TLS support: yes, no, required. <doc/wiki/SSL.txt>
<%= Dovecot::Conf.attribute(@conf, 'ssl', 'yes') %>

# PEM encoded X.509 SSL/TLS certificate and private key. They're opened before
# dropping root privileges, so keep the key file unreadable by anyone but
# root. Included doc/mkcert.sh can be used to easily generate self-signed
# certificate, just make sure to update the domains in dovecot-openssl.cnf
<% case node['platform']
    when 'redhat','centos','scientific','fedora','suse','amazon' then
      ssl_cert = '</etc/pki/dovecot/certs/example.pem'
      ssl_key = '</etc/pki/dovecot/certs/example.key'
      ca_pem = '</etc/pki/dovecot/certs/ca.pem'
    # when 'debian', 'ubuntu' then
    else
      ssl_cert = '</etc/ssl/certs/example.pem'
      ssl_key = '</etc/ssl/private/example.key'
      ca_pem = '</etc/ssl/certs/ca.pem'
    end
-%>
<%= Dovecot::Conf.attribute(@conf, 'ssl_cert', ssl_cert) %>
<%= Dovecot::Conf.attribute(@conf, 'ssl_key', ssl_key) %>

# If key file is password protected, give the password here. Alternatively
# give it when starting dovecot with -p parameter. Since this file is often
# world-readable, you may want to place this setting instead to a different
# root owned 0600 file by using ssl_key_password = <path.
<%= Dovecot::Conf.attribute(@conf, 'ssl_key_password') %>

# PEM encoded trusted certificate authority. Set this only if you intend to use
# ssl_verify_client_cert=yes. The file should contain the CA certificate(s)
# followed by the matching CRL(s). (e.g. ssl_ca = <%= ca_pem %>)
<%= Dovecot::Conf.attribute(@conf, 'ssl_ca') %>

# Request client to send a certificate. If you also want to require it, set
# auth_ssl_require_client_cert=yes in auth section.
<%= Dovecot::Conf.attribute(@conf, 'ssl_verify_client_cert', false) %>

# Which field from certificate to use for username. commonName and
# x500UniqueIdentifier are the usual choices. You'll also need to set
# auth_ssl_username_from_cert=yes.
<%= Dovecot::Conf.attribute(@conf, 'ssl_cert_username_field', 'commonName') %>

# How often to regenerate the SSL parameters file. Generation is quite CPU
# intensive operation. The value is in hours, 0 disables regeneration
# entirely.
<%= Dovecot::Conf.attribute(@conf, 'ssl_parameters_regenerate', 168) %>

# SSL ciphers to use
<%= Dovecot::Conf.attribute(@conf, 'ssl_cipher_list', 'ALL:!LOW:!SSLv2:!EXP:!aNULL') %>
